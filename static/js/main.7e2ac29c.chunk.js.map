{"version":3,"sources":["components/Home/Home.jsx","components/redux/actions/index.js","components/About/About.jsx","components/Navbar/Navbar.jsx","components/helpers.js","components/Activities/Activities.jsx","App.js","serviceWorker.js","components/redux/reducers/selectDays.js","components/redux/reducers/selectCity.js","components/redux/reducers/selectDay.js","components/redux/reducers/index.js","index.js"],"names":["connect","state","console","log","daysInfo","selectDays","cityName","selectCity","dayInfo","selectDay","dispatch","type","props","useState","setForcastTenDays","selectedItem","setSelectedItem","setSelectedItemHeader","searchQuery","setSearchQuery","fetchWeather","search","fetch","method","headers","process","then","response","json","list","map","forcast","document","getElementsByClassName","scrollIntoView","catch","err","className","src","alt","Dropdown","placeholder","fluid","selection","options","key","text","value","onChange","evt","currentTarget","innerText","Button","onClick","Icon","name","action","target","style","paddingTop","fontSize","color","length","date","Date","dt","day","getDate","month","getMonth","weekday","getUTCDay","to","weather","main","y","feels_like","night","eve","morn","description","About","Component","Navbar","navbarToggle","navbarMenu","componentDidMount","prevScrollpos","window","pageYOffset","onscroll","currentScrollPos","setState","Segment","Group","Responsive","as","minWidth","this","primary","maxWidth","display","activities","activity","documentElement","scrollTop","includes","render","flexWrap","position","marginBottom","width","id","height","frameBorder","border","REACT_APP_API_KEY_GOOGLE","allowFullScreen","App","exact","path","component","Home","Activities","Boolean","location","hostname","match","combineReducers","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7e2ac29c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./home.css\";\r\nimport { Dropdown, Button, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectDays, selectCity, selectDay } from \"../redux/actions/index\";\r\nconst Home = (props) => {\r\n  console.log(props);\r\n  let [forcastTenDays, setForcastTenDays] = useState();\r\n  let [selectedItem, setSelectedItem] = useState();\r\n  let [selectedItemHeader, setSelectedItemHeader] = useState();\r\n  let [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  let cityOptions = [\r\n    {\r\n      key: \"Auckland\",\r\n      text: \"Auckland\",\r\n      value: \"Auckland\",\r\n    },\r\n    {\r\n      key: \"Wellington\",\r\n      text: \"Wellington\",\r\n      value: \"Wellington\",\r\n    },\r\n    {\r\n      key: \"Christchurch\",\r\n      text: \"Christchurch\",\r\n      value: \"Christchurch\",\r\n    },\r\n    {\r\n      key: \"Hamilton\",\r\n      text: \"Hamilton\",\r\n      value: \"Hamilton\",\r\n    },\r\n    {\r\n      key: \"Tauranga\",\r\n      text: \"Tauranga\",\r\n      value: \"Tauranga\",\r\n    },\r\n    {\r\n      key: \"Lower Hutt\",\r\n      text: \"Lower Hutt\",\r\n      value: \"Lower Hutt\",\r\n    },\r\n    {\r\n      key: \"Dunedin\",\r\n      text: \"Dunedin\",\r\n      value: \"Dunedin\",\r\n    },\r\n    {\r\n      key: \"Palmerston North\",\r\n      text: \"Palmerston North\",\r\n      value: \"Palmerston North\",\r\n    },\r\n    {\r\n      key: \"Napier\",\r\n      text: \"Napier\",\r\n      value: \"Napier\",\r\n    },\r\n    {\r\n      key: \"Porirua\",\r\n      text: \"Porirua\",\r\n      value: \"Porirua\",\r\n    },\r\n    {\r\n      key: \"New Plymouth\",\r\n      text: \"New Plymouth\",\r\n      value: \"New Plymouth\",\r\n    },\r\n    {\r\n      key: \"Rotorua\",\r\n      text: \"Rotorua\",\r\n      value: \"Rotorua\",\r\n    },\r\n    {\r\n      key: \"Whangarei\",\r\n      text: \"Whangarei\",\r\n      value: \"Whangarei\",\r\n    },\r\n    {\r\n      key: \"Hibiscus Coast\",\r\n      text: \"Hibiscus Coast\",\r\n      value: \"Hibiscus Coast\",\r\n    },\r\n    {\r\n      key: \"Nelson\",\r\n      text: \"Nelson\",\r\n      value: \"Nelson\",\r\n    },\r\n    {\r\n      key: \"Invercargill\",\r\n      text: \"Invercargill\",\r\n      value: \"Invercargill\",\r\n    },\r\n    {\r\n      key: \"Hastings\",\r\n      text: \"Hastings\",\r\n      value: \"Hastings\",\r\n    },\r\n    {\r\n      key: \"Upper Hutt\",\r\n      text: \"Upper Hutt\",\r\n      value: \"Upper Hutt\",\r\n    },\r\n    {\r\n      key: \"Whanganui\",\r\n      text: \"Whanganui\",\r\n      value: \"Whanganui\",\r\n    },\r\n    {\r\n      key: \"Gisborne\",\r\n      text: \"Gisborne\",\r\n      value: \"Gisborne\",\r\n    },\r\n  ];\r\n\r\n  const fetchWeather = (search) => {\r\n    fetch(\r\n      `https://community-open-weather-map.p.rapidapi.com/forecast/daily?q=${\r\n        search ? search : selectedItem\r\n      }&lat=0&lon=0&cnt=10&units=metric`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\r\n          \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((response) => {\r\n        // console.log(response);\r\n        setForcastTenDays(\r\n          response.list.map((forcast) => {\r\n            return forcast;\r\n          })\r\n        );\r\n        props.selectDays(\r\n          response.list.map((forcast) => {\r\n            return forcast;\r\n          })\r\n        );\r\n        setSelectedItemHeader(search ? search : selectedItem);\r\n        props.selectCity(search ? search : selectedItem);\r\n      })\r\n      .then(() => {\r\n        document.getElementsByClassName(\"cityName\")[0].scrollIntoView();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        // console.log(process.env.API_KEY);\r\n      });\r\n  };\r\n  const getDate = (date) => {\r\n    let day = date.getDate();\r\n    let month = date.getMonth();\r\n    let weekday = date.getUTCDay();\r\n\r\n    switch (weekday) {\r\n      case 0:\r\n        weekday = \"Sunday\";\r\n        break;\r\n      case 1:\r\n        weekday = \"Monday\";\r\n        break;\r\n      case 2:\r\n        weekday = \"Tuesday\";\r\n        break;\r\n      case 3:\r\n        weekday = \"Wednesday\";\r\n        break;\r\n      case 4:\r\n        weekday = \"Thursday\";\r\n        break;\r\n      case 5:\r\n        weekday = \"Friday\";\r\n        break;\r\n      case 6:\r\n        weekday = \"Saturday\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    switch (month) {\r\n      case 0:\r\n        month = \"January\";\r\n        break;\r\n      case 1:\r\n        month = \"February\";\r\n        break;\r\n      case 2:\r\n        month = \"March\";\r\n        break;\r\n      case 3:\r\n        month = \"April\";\r\n        break;\r\n      case 4:\r\n        month = \"May\";\r\n        break;\r\n      case 5:\r\n        month = \"June\";\r\n        break;\r\n      case 6:\r\n        month = \"July\";\r\n        break;\r\n      case 7:\r\n        month = \"August\";\r\n        break;\r\n      case 8:\r\n        month = \"September\";\r\n        break;\r\n      case 9:\r\n        month = \"October\";\r\n        break;\r\n      case 10:\r\n        month = \"November\";\r\n        break;\r\n      case 11:\r\n        month = \"December\";\r\n        break;\r\n    }\r\n    return `${weekday} ${day} ${month}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"home-landing-container\">\r\n        <div className=\"home-landing-text\">\r\n          <h1>Welcome to New Zealand</h1>\r\n          <div className=\"home-inner\">\r\n            <div className=\"home-text\">\r\n              <p>\r\n                {\" \"}\r\n                <strong>Hey there!</strong> Lorem ipsum dolor sit, amet\r\n                consectetur adipisicing elit. Omnis voluptatibus incidunt enim\r\n                natus reiciendis expedita veritatis impedit temporibus officiis\r\n                odio maiores voluptas dolore cumque odit iure alias mollitia,\r\n                velit, voluptates exercitationem corrupti. Atque voluptatem\r\n                expedita cum iusto ipsam voluptatum quae architecto repudiandae\r\n                mollitia officia provident quibusdam impedit, aspernatur tenetur\r\n                enim.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <img\r\n            className=\"homeImage\"\r\n            src=\"https://img.traveltriangle.com/blog/wp-content/uploads/2015/09/Auckland.jpg\"\r\n            alt=\"\"\r\n          />\r\n          <img\r\n            className=\"homeImage\"\r\n            src=\"https://www.firstlighttravel.com/sites/default/files/styles/article_800x/public/2018-11/abel-tasman-kayaking.jpg?itok=nKgEXN3D\"\r\n            alt=\"\"\r\n          />\r\n          <img\r\n            className=\"homeImage\"\r\n            src=\"https://mustdonewzealand.co.nz/wp-content/uploads/2016/12/hobbiton-movie-set-tours-matamata-from-Rotorua-nz-560x460.jpg\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"home-selection\">\r\n            <h2>Get Weather and Find Activities</h2>\r\n            <div className=\"selectCity\">\r\n              <Dropdown\r\n                placeholder=\"Select City\"\r\n                fluid\r\n                selection\r\n                options={cityOptions}\r\n                onChange={(evt) => {\r\n                  console.log(evt.currentTarget.innerText);\r\n                  setSelectedItem(evt.currentTarget.innerText);\r\n                }}\r\n              />\r\n              <Button className=\"dropdownSubmit\" onClick={() => fetchWeather()}>\r\n                <Icon name=\"sun\" />\r\n              </Button>\r\n            </div>\r\n\r\n            <p>Cant find your location? Try search for it below!</p>\r\n            <form className=\"searchBar\" action=\"\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Find your location!\"\r\n                onChange={(evt) => {\r\n                  console.log(evt.target.value);\r\n                  setSearchQuery(evt.target.value);\r\n                  setSelectedItem(searchQuery);\r\n                }}\r\n              />\r\n              <button\r\n                className=\"searchbarSubmit\"\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                  fetchWeather(searchQuery);\r\n                }}\r\n              >\r\n                <Icon name=\"sun\" />\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"weather-main-container\">\r\n        <h3\r\n          className=\"cityName\"\r\n          style={{ paddingTop: \"10%\", fontSize: \"3rem\", color: \"white\" }}\r\n        >\r\n          {props.cityName}\r\n        </h3>\r\n        <div className=\"all-forcasts\">\r\n          {props.daysInfo.length > 0 &&\r\n            props.daysInfo.map((forcast) => {\r\n              let date = new Date(forcast.dt * 1000);\r\n              date = getDate(date);\r\n              return (\r\n                <div\r\n                  className=\"single-forcast\"\r\n                  onClick={() => props.selectDay(forcast)}\r\n                >\r\n                  <div className=\"date info\">\r\n                    {date}\r\n                    <Link to={`/activities/${forcast.weather[0].main}`}>\r\n                      <Button color=\"grey\" y>\r\n                        Find Activities\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"day info\">\r\n                    <strong>Day:</strong> {forcast.feels_like.day} °C{\" \"}\r\n                  </div>\r\n                  <div className=\"night info\">\r\n                    <strong>Night: </strong> {forcast.feels_like.night} °C\r\n                  </div>\r\n                  <div className=\"evening info\">\r\n                    <strong> Evening:</strong> {forcast.feels_like.eve} °C\r\n                  </div>\r\n                  <div className=\"morning info\">\r\n                    {\" \"}\r\n                    <strong>Morning:</strong> {forcast.feels_like.morn} °C\r\n                  </div>\r\n                  <div className=\"weather info\">\r\n                    <strong>Weather: </strong>\r\n                    {forcast.weather[0].main}, {forcast.weather[0].description}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state);\r\n  return {\r\n    daysInfo: state.selectDays.daysInfo,\r\n    cityName: state.selectCity.cityName,\r\n    dayInfo: state.selectDay.dayInfo,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    selectDays: (daysInfo) => dispatch(selectDays(daysInfo)),\r\n    selectCity: (cityName) => dispatch(selectCity(cityName)),\r\n    selectDay: (dayInfo) => dispatch(selectDay(dayInfo)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","export const selectDays = daysInfo => {\r\n  return {\r\n    type: 'SELECT_DAYS',\r\n    daysInfo\r\n  }\r\n}\r\n\r\nexport const selectCity = cityName => {\r\n  console.log(cityName);\r\n  return {\r\n    type: 'SELECT_CITY',\r\n    cityName\r\n  }\r\n}\r\n\r\nexport const selectDay = dayInfo => {\r\n  return {\r\n    type: 'SELECT_DAY',\r\n    dayInfo\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nclass About extends Component {\r\n  render () {\r\n    return (\r\n      <div>About Page</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About","import React, { Component } from 'react'\r\nimport './navbar.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Responsive, Segment, Icon  } from 'semantic-ui-react'\r\nclass Navbar extends Component {\r\n\r\n  state = {\r\n    navbarToggle: true,\r\n    navbarMenu: true\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    var prevScrollpos = window.pageYOffset\r\n    window.onscroll = () => {\r\n      var currentScrollPos = window.pageYOffset\r\n      if (prevScrollpos > currentScrollPos) {\r\n        this.setState({ navbarToggle: true })\r\n      } else {\r\n        this.setState({ navbarToggle: false })\r\n      }\r\n      prevScrollpos = currentScrollPos\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Segment.Group>\r\n        <Responsive as={Segment} minWidth={1000}>\r\n          <div className={`navbar ${this.state.navbarToggle ? \"show\" : \"hide\"}`}>\r\n            <div className=\"navbar-inner\">\r\n              <div className=\"navbar-left\">\r\n                <div className=\"navbar-brand\">Tourism NZ</div>\r\n                <Link className=\"navbar-link\" to=\"/\">Home</Link>\r\n                <Link className=\"navbar-link\" to=\"/about\">About</Link>\r\n              </div>\r\n              <div className=\"navbar-right\">\r\n                <Button primary>Sign In</Button>\r\n                <Button color='purple'>Sign Up</Button>\r\n              </div>\r\n            </div>\r\n          </div >\r\n        </Responsive>\r\n        <Responsive as={Segment} minWidth={0} maxWidth={1000}>\r\n          <div className={`navbar ${this.state.navbarToggle ? \"show\" : \"hide\"}`}>\r\n            <div className=\"navbar-inner\">\r\n              <div className=\"navbar-left\">\r\n                <div className=\"navbar-brand\">Tourism NZ</div>\r\n                \r\n              </div>\r\n              <div className=\"navbar-right\"> \r\n                <Icon onClick={()=> {this.setState({navbarMenu: !this.state.navbarMenu})}}name={`${this.state.navbarMenu? 'chevron up': 'chevron down'}`}/>\r\n              </div>\r\n            </div>\r\n            {this.state.navbarMenu && <div style={{display:'block'}}>\r\n              <div>\r\n                <Link className=\"navbar-link\" to=\"/\">Home</Link>\r\n              </div>\r\n              <div>\r\n                <Link className=\"navbar-link\" to=\"/about\">About</Link>\r\n              </div>\r\n              <div>\r\n                <Button primary>Sign In</Button>\r\n              </div>\r\n              <div>\r\n                <Button color='purple'>Sign Up</Button>\r\n              </div>\r\n            </div>}\r\n          </div >\r\n        \r\n        </Responsive>\r\n      </Segment.Group>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar","export const getDate = (dt) => {\r\n  let date = new Date(dt * 1000)\r\n  let day = date.getDate()\r\n  let month = date.getMonth()\r\n  let weekday = date.getUTCDay()\r\n\r\n  switch (weekday) {\r\n    case 0:\r\n      weekday = \"Sunday\"\r\n      break;\r\n    case 1:\r\n      weekday = \"Monday\"\r\n      break;\r\n    case 2:\r\n      weekday = \"Tuesday\"\r\n      break;\r\n    case 3:\r\n      weekday = \"Wednesday\"\r\n      break;\r\n    case 4:\r\n      weekday = \"Thursday\"\r\n      break;\r\n    case 5:\r\n      weekday = \"Friday\"\r\n      break;\r\n    case 6:\r\n      weekday = \"Saturday\"\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  switch (month) {\r\n    case 0:\r\n      month = \"January\"\r\n      break;\r\n    case 1:\r\n      month = \"February\"\r\n      break;\r\n    case 2:\r\n      month = \"March\"\r\n      break;\r\n    case 3:\r\n      month = \"April\"\r\n      break;\r\n    case 4:\r\n      month = \"May\"\r\n      break;\r\n    case 5:\r\n      month = \"June\"\r\n      break;\r\n    case 6:\r\n      month = \"July\"\r\n      break;\r\n    case 7:\r\n      month = \"August\"\r\n      break;\r\n    case 8:\r\n      month = \"September\"\r\n      break;\r\n    case 9:\r\n      month = \"October\"\r\n      break;\r\n    case 10:\r\n      month = \"November\"\r\n      break;\r\n    case 11:\r\n      month = \"December\"\r\n      break;\r\n  }\r\n  return `${weekday} ${day} ${month}`\r\n}","import { GoogleMap, Marker } from \"react-google-maps\"\r\nimport React, { Component, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './activities.css'\r\nimport { getDate } from '../helpers'\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nclass activities extends Component {\r\n\r\n  state = {\r\n    activity: \"tourism\",\r\n    searchQuery: \"\"\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    document.documentElement.scrollTop = 0\r\n    if (this.props.dayInfo.weather[0].main.includes(\"Rain\")) {\r\n      this.setState({ activity: \"indoors\" })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render = () => {\r\n    console.log(this.props.dayInfo);\r\n    return (\r\n      <>\r\n        <div className=\"activities-dayInfo\">\r\n          <p>{getDate(this.props.dayInfo.dt)}</p>\r\n          <p>{this.props.cityName}</p>\r\n          <p className=\"day info\"><strong>Day:</strong> {this.props.dayInfo.feels_like.day} °C </p>\r\n          <p className=\"night info\"><strong>Night: </strong> {this.props.dayInfo.feels_like.night} °C</p>\r\n          <p className=\"evening info\"><strong> Evening:</strong> {this.props.dayInfo.feels_like.eve} °C</p>\r\n          <p className=\"morning info\"> <strong>Morning:</strong> {this.props.dayInfo.feels_like.morn} °C</p>\r\n          <p className=\"weather info\"><strong>Weather: </strong>{this.props.dayInfo.weather[0].main}, {this.props.dayInfo.weather[0].description}</p>\r\n        </div>\r\n        <div className=\"activities-list\">\r\n          <h1>Activities when {this.props.dayInfo.weather[0].description}</h1>\r\n          <div style={{display:\"flex\", flexWrap:\"wrap\"}}>\r\n            {!this.props.dayInfo.weather[0].main.includes(\"Rain\") && <Button className=\"activityButton\" onClick={() => {\r\n              this.setState({ activity: \"Parks\" })\r\n            }}>Parks</Button>}\r\n            <Button className=\"activityButton\" onClick={() => {\r\n              this.setState({ activity: \"Cafes\" })\r\n            }}>Cafes</Button>\r\n             <Button className=\"activityButton\" onClick={() => {\r\n              this.setState({ activity: \"Shopping\" })\r\n            }}>Shopping</Button>\r\n            <Button className=\"activityButton\" onClick={() => {\r\n              this.setState({ activity: \"Tourism\" })\r\n            }}>General Tourism</Button>\r\n            <Button className=\"activityButton\" onClick={() => {\r\n              this.setState({ activity: \"Indoors\" })\r\n            }}>Indoors</Button>\r\n            <Button className=\"activityButton\" onClick={() => {\r\n              this.setState({ activity: \"Restaurants\" })\r\n            }}>Restaurants</Button>\r\n            <div style={{ position: \"inline-block\", marginBottom: \"5px\", display:\"block\" ,width:\"100%\"}}>\r\n              <input onChange={(evt) => {\r\n                this.setState({searchQuery: evt.target.value})\r\n              }}className=\"searchbar\" type=\"text\" id=\"fname\" name=\"fname\" placeholder=\"Find your place!\"></input>\r\n              <button onClick={() => {\r\n                this.setState({activity: this.state.searchQuery})\r\n              }}className=\"searchButton\">Search</button>\r\n            </div>\r\n\r\n          </div>\r\n          <iframe\r\n            width=\"100%\"\r\n            height=\"500px\"\r\n            frameBorder=\"0\" style={{ border: \"0\" }}\r\n            src={`https://www.google.com/maps/embed/v1/search?key=${process.env.REACT_APP_API_KEY_GOOGLE}&q=${this.props.cityName}+city+${this.state.activity}&zoom=8\r\n            `} allowFullScreen>\r\n          </iframe>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dayInfo: state.selectDay.dayInfo,\r\n    cityName: state.selectCity.cityName\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(activities)","import React from 'react';\r\nimport Home from './components/Home/Home'\r\nimport About from './components/About/About'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport Activities from './components/Activities/Activities'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Route exact path='/' component={Home} />\r\n      <Route exact path='/about' component={About} />\r\n      <Route exact path='/activities/:weather' component={Activities}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const selectDays = (state = {daysInfo:{}}, action) => {\r\n  switch(action.type){\r\n    case 'SELECT_DAYS': \r\n      return { \r\n        ...state,\r\n        daysInfo: action.daysInfo\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default selectDays","const selectCity = (state = {cityName:''}, action) => {\r\n  console.log(action);\r\n  switch(action.type){\r\n    case 'SELECT_CITY': \r\n      return {\r\n        ...state,\r\n        cityName: action.cityName\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default selectCity","const selectDay = (state = {dayInfo:{}}, action) => {\r\n  switch(action.type){\r\n    case 'SELECT_DAY':\r\n      return {\r\n        ...state,\r\n        dayInfo:action.dayInfo\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default selectDay","import { combineReducers } from 'redux'\r\nimport selectDays from './selectDays'\r\nimport selectCity from './selectCity'\r\nimport selectDay from './selectDay'\r\nexport default combineReducers({\r\n  selectDays,\r\n  selectCity,\r\n  selectDay\r\n})\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter as Router } from \"react-router-dom\"\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux';\r\nimport reducers from './components/redux/reducers/index'\r\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </React.StrictMode>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}